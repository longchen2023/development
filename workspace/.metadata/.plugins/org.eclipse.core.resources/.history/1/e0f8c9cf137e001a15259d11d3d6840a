package com.example.izakaya.controller;

import java.util.ArrayList;
import java.util.List;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.example.izakaya.entity.CommentInfo;
import com.example.izakaya.entity.IzakayaInfo;
import com.example.izakaya.model.IzakayaCommentForm;
import com.example.izakaya.model.IzakayaCommentListForm;
import com.example.izakaya.model.IzakayaForm;
import com.example.izakaya.model.IzakayaListForm;
import com.example.izakaya.model.IzakayaSearchForm;
import com.example.izakaya.model.IzakayaSession;
import com.example.izakaya.service.IzakayaSearchService;
import com.example.izakaya.util.Constants;

/**
 * 
 * 検索機能.
 * 
 * @author 双江
 *
 */
@Controller
@RequestMapping(value = Constants.URL_SEARCH)
public class IzakayaSearchController {

	@Autowired
	IzakayaSearchService izakayaSearchService;

	/**
	 * 居酒屋の検索画面へ.
	 * 
	 * @param model model
	 * @return 検索画面
	 */
	@RequestMapping(value = Constants.URL_TO_IZAKAYA_SEARCH, method = RequestMethod.GET)
	public String showSearch(Model model) {

		model.addAttribute(Constants.IZAKAYA_SEARCH_FORM, new IzakayaSearchForm());
		model.addAttribute(Constants.IZAKAYA_LIST_FORM, new IzakayaListForm());
		return Constants.VIEW_IZAKAYA_SEARCH;
	}
	
	
	/**
	 * 検索条件より、検索する.
	 * 
	 * @param model              model
	 * @param izakayaSearchForm  検索form
	 * @param bindingResult      バリデーションチェック結果
	 * @return 検索画面
	 */
	@RequestMapping(value = Constants.URL_IZAKAYA_SEARCH, method = RequestMethod.POST)
	public String searchByConditions(Model model, @Valid IzakayaSearchForm izakayaSearchForm,
			BindingResult bindingResult) {
		// バリデーションチェック
		if (bindingResult.hasErrors()) {
			final List<IzakayaInfo> resultList = new ArrayList<IzakayaInfo>();
			final IzakayaListForm  izakayaListForm = new IzakayaListForm();
			izakayaListForm.setIzakayaList(resultList);
			model.addAttribute(Constants.IZAKAYA_LIST_FORM, new IzakayaListForm());
			model.addAttribute(Constants.IZAKAYA_SEARCH_FORM, izakayaSearchForm);
			return Constants.VIEW_IZAKAYA_SEARCH;
		}

		// form情報を設定
		final IzakayaListForm izakayaListForm = new IzakayaListForm();
		final List<IzakayaInfo> resultList = izakayaSearchService.getIzakayaListBySearchForm(izakayaSearchForm);
		izakayaListForm.setIzakayaList(resultList);
		model.addAttribute(Constants.IZAKAYA_LIST_FORM, izakayaListForm);
		model.addAttribute(Constants.IZAKAYA_SEARCH_FORM, izakayaSearchForm);
		return Constants.VIEW_IZAKAYA_SEARCH;
	}

	/**
	 * 居酒屋を検索する.
	 * 
	 * @param model             model
	 * @param izakayaSearchForm 検索form
	 * @return 検索結果画面
	 */
	@RequestMapping(value = Constants.URL_IZAKAYA_SEARCH_ALL, method = RequestMethod.GET)
	public String searchAll(Model model, IzakayaSearchForm izakayaSearchForm) {

		// form情報を設定
		final IzakayaListForm izakayaListForm = new IzakayaListForm();
		//TODO
		List<IzakayaInfo> resultList = new ArrayList<IzakayaInfo>();
		/*
		 * if (izakayaSearchForm.getGenre() == null && izakayaSearchForm.getArea() ==
		 * null && izakayaSearchForm.getMaxAmount() == null &&
		 * izakayaSearchForm.getMaxAmount() == null &&
		 * izakayaSearchForm.getReservationNums() == null) { // 居酒屋情報を取得する resultList =
		 * izakayaSearchService.getIzakayaList(); } else { // 居酒屋情報を取得する resultList =
		 * izakayaSearchService.getIzakayaListBySearchForm(izakayaSearchForm); }
		 */

		// 居酒屋情報を取得する
		resultList = izakayaSearchService.getIzakayaList();
		izakayaListForm.setIzakayaList(resultList);
		model.addAttribute(Constants.IZAKAYA_LIST_FORM, izakayaListForm);
		return Constants.VIEW_IZAKAYA_SEARCH_ALL;
	}
	
	/**
	 * 居酒屋の詳細画面へ.
	 * 
	 * @param model model
	 * @param id 居酒屋id
	 * @return 居酒屋の詳細画面
	 */
	@RequestMapping(value = Constants.URL_TO_IZAKAYA_DETAIL, method = RequestMethod.GET)
	public String showIzakayaDetail(Model model,@ModelAttribute("izakayaId") String redirId, @RequestParam(required=false,name="izakayaId") String paramId) {

		// 取得した居酒屋情報をizakayaFormに設定
		final IzakayaForm izakayaForm = new IzakayaForm();
		String izakayaId = paramId;
		if(paramId == null) {
			izakayaId = redirId;
		}
		final IzakayaInfo izakayaInfo = izakayaSearchService.getIzakayaById(izakayaId);
		izakayaForm.setNo(izakayaInfo.getId());
		izakayaForm.setShopName(izakayaInfo.getName());
		izakayaForm.setArea(izakayaInfo.getArea());
		izakayaForm.setGenre(izakayaInfo.getGenre());
		izakayaForm.setOpenTime(izakayaInfo.getOpening_time());
		izakayaForm.setCloseTime(izakayaInfo.getClosing_time());
		izakayaForm.setHoliday(izakayaInfo.getHoliday());
		izakayaForm.setPrice(izakayaInfo.getPrice());
		izakayaForm.setAddress(izakayaInfo.getAddress());
		izakayaForm.setMaxNumOfPeople(izakayaInfo.getMax_num_of_people());
		izakayaForm.setTele(izakayaInfo.getTele());
		izakayaForm.setUrl(izakayaInfo.getUrl());
		
		//取得した居酒屋コメント情報をIzakayaCommentListFormに設定
		final IzakayaCommentListForm izakayaCommentListForm = new IzakayaCommentListForm();
		//居酒屋のリスト
		 List<CommentInfo> commentList = izakayaSearchService.getIzakayaCommentById(izakayaId);
		 izakayaCommentListForm.setCommentList(commentList);

		model.addAttribute(Constants.IZAKAYA_FORM, izakayaForm);
		model.addAttribute(Constants.IZAKAYA_COMMENT_LIST_FORM, izakayaCommentListForm);
		return Constants.VIEW_IZAKAYA_DETAIL;
	}
	
	/**
	 * 居酒屋へのコメント.
	 * 
	 * @param model model
	 * @param redirectAttributes redirectAttributes
	 * @param izakayaCommentForm 居酒屋コメントform
	 * @param httpSession httpSession
	 * @return redirect:居酒屋の詳細画面
	 */
	@RequestMapping(value = Constants.URL_IZAKAYA_COMMENT, method = RequestMethod.POST)
	public String registerIzakayaComment(RedirectAttributes redirectAttributes, Model model,IzakayaCommentForm izakayaCommentForm, HttpSession httpSession) {

		final IzakayaSession izakayaSession = getLoginInfo(httpSession);
		//userIdを設定
		if (izakayaSession == null || !izakayaSession.isLogin()) {
			izakayaCommentForm.setUserId("0");
		}else {
			izakayaCommentForm.setUserId(izakayaSession.getUserId());
		}
		
		izakayaSearchService.registerIzakayaCommentInfo(izakayaCommentForm);
		
		redirectAttributes.addFlashAttribute(Constants.ATTR_IZAKAYA_ID, izakayaCommentForm.getIzakayaId());
		return Constants.URL_REDIRECT + Constants.URL_SEARCH + Constants.URL_TO_IZAKAYA_DETAIL;
	}
	
	
	/**
	 * ログイン情報を取得する.
	 * 
	 * @param httpSession session
	 * @return ログイン情報
	 */
	private IzakayaSession getLoginInfo(HttpSession httpSession) {
		final IzakayaSession izakayaSession = (IzakayaSession) httpSession.getAttribute(Constants.IZAKAYA_SESSION);
		return izakayaSession;
	}

}
